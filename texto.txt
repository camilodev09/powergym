carrousel pure
note// en layout css carrousel appendDots

import "./globals.css";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>{children}</body>
    </html>
  );
}


"use client";

import React, { useState } from "react";
import Slider from "react-slick";
import { testim1, testim2, testim3 } from "@/public/assets";

function SampleNextArrow(props) {
  const { onClick } = props;
  return <div onClick={onClick}></div>;
}

function SamplePrevArrow(props) {
  const { onClick } = props;

  return <div onClick={onClick}></div>;
}

const Carrousel = () => {
  const [dotActive, setDocActive] = useState(0);

  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 3,
    slidesToScroll: 1,

    autoplay: true,
    autoplaySpeed: 2000,
    pauseOnHover: true,
    nextArrow: <SampleNextArrow />,
    prevArrow: <SamplePrevArrow />,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          infinite: true,
          dots: true,
          centerMode: true,
        },
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          initialSlide: 1,
          centerMode: true,
        },
      },
      {
        breakpoint: 480,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          centerMode: true,
          centerPadding: "7%",
        },
      },
    ],
    beforeChange: (prev, next) => {
      setDocActive(next);
    },

    appendDots: (dots) => (
      <div
        style={{
          borderRadius: "10px",
          padding: "10px",
        }}
      >
        <ul
          style={{
            display: "flex",
            gap: "15px",
            justifyContent: "center",
            marginTop: "20px",
          }}
        >
          {" "}
          {dots}{" "}
        </ul>
      </div>
    ),
    customPaging: (i) => (
      <div
        style={
          i === dotActive
            ? {
                width: "12px",
                height: "12px",
                color: "blue",
                background: "#ff014f",
                borderRadius: "50%",
                cursor: "pointer",
              }
            : {
                width: "12px",
                height: "12px",
                color: "blue",
                background: "gray",
                borderRadius: "50%",
                cursor: "pointer",
              }
        }
      ></div>
    ),
  };

  return (
    <div className="justify-center items-center">
      <h1 className="text-sm md:text-3xl bg-black text-white py-5  w-30 md:w-100 text-center rounded-sm  md:p-7 ">
        It´s time to buy. Let´s go to the store!
      </h1>
      <Slider {...settings}>
        <div className=" button-10">
          <img
            className="rounded-lg object-cover"
            src="/assets/testim1.png"
            alt="imgSlid"
          />
        </div>
        <div>
          <img
            className=" rounded-lg object-cover"
            src="/assets/testim1.png"
            alt="imgSlider2"
          />
        </div>
        <div>
          <img
            className="rounded-lg object-cover"
            src="/assets/testim2.png"
            alt="imgSlider3"
          />
        </div>
        <div>
          <img
            className="rounded-lg object-cover"
            src="/assets/testim3.png"
            alt="imgSlider3"
          />
          <h1>xi fu</h1>
          <p>hola que tal</p>
        </div>
        <div>
          <img
            className="rounded-lg object-cover"
            src="/assets/testim3.png"
            alt="imgSlider3"
          />
        </div>
      </Slider>
    </div>
  );
};

export default Carrousel;
